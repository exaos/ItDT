Attributions
This book makes use of a number of images that are in the public domain or that have been released under permissive licenses that encourage sharing and reuse. The authors and sources of these images are acknowledged below.
Section 1.1.
Author: Particle Dynamics Group, Department of Oceanography, Texas
A&M University.
Source: http://www-ocean.tamu.edu/∼pdgroup/jpegs/waves.jpg License: Used and distributed with permission.
￼￼￼429
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 430 — #456 i
Section 5.1.
Author: Bill Casselman.
Source: http://upload.wikimedia.org/wikipedia/commons/0/0b/Ybc7289-bw.jpg License: Creative Commons Attribution 2.5.
Section 5.2.8. Author: T3rminatr
Source: http://commons.wikimedia.org/wiki/Image:Orbital_Planes.svg License: Public Domain.
Section 5.4.3. Author: Klaus Gena.
Source: http://openclipart.org/people/KlausGena/KlausGena_Tuned_Lada_VAZ_2101.svg License: Public Domain.
￼￼￼￼￼￼ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 431 — #457 i
Section 7.2.5.
Author: Denelson83 http://en.wikipedia.org/wiki/User:Denelson83.
Source: http://commons.wikimedia.org/wiki/Image:Flag_of_the_Commonwealth_of_Nations.svg License: Public Domain.
￼￼￼￼￼Section 9.1.
Author: Nukkio http://www.nukkio.altervista.org/index.htm. Source: http://openclipart.org/people/ernes/ernes_orologio_clock.svg License: Public Domain.
￼9.8.12.
Author: Balder777 http://de.wikipedia.org/wiki/Benutzer:Balder777.
ii ii
Section
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 432 — #458 i
Source: http://commons.wikimedia.org/wiki/Image:Spiralfo ̈rmige_Energiesparlampe_quadr.png License: Public Domain.
Section 9.9.3.
Author: United States Department of Agriculture.
Source: http://commons.wikimedia.org/wiki/Image:Usda_rachis_barley.jpg License: Public Domain.
￼￼￼￼ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 433 — #459 i
Bibliography
[1] Daniel Adler, Christian Gla ̈ser, Oleg Nenadic, Jens Oehlschla ̈gel, and Walter Zucchini. ff: memory-efficient storage of large atomic vectors and arrays on disk and fast access functions, 2008. R package version 2.0.0.
[2] Henrik Bengtsson. R Coding Conventions. http://www1.maths.lth.se/help/R/RCC/, 2008.
[3] Tim Berners-Lee. The World Wide Web: Past, Present and Future, 1996. http://www.w3.org/People/Berners-Lee/1996/ppf.html.
[4] Tim Berners-Lee. The World Wide Web: A Very Short Personal History, 2007.
http://www.w3.org/People/Berners-Lee/ShortHistory.html.
[5] Rafe Colburn. Using SQL (Special Edition). Que, 1999.
[6] David B. Dahl. xtable: Export tables to LATEX or HTML, 2007. R package version 1.5-2.
[7] Peter Dalgaard. Introductory Statistics with R. Springer, 2nd edition, 2008.
[8] Data Documentation Initiative. DDI home page, 2008. http://www.ddialliance.org/.
[9] DevShed. DevShed home page, 2008. http://www.devshed.com/.
[10] FileFormat.Info. FileFormat.Info: The Digital Rosetta Stone, 2008.
http://www.fileformat.info/.
[11] Firefox home page.
http://www.mozilla.com/en-US/products/firefox/, 2008.
[12] Jeffrey Friedl. Mastering Regular Expressions. O’Reilly, 3rd edition,
2006.
[13] Jan Goyvaerts. Regular-Expressions.info home page.
http://wwww.regular-expressions.info, 2008.
[14] James R. Groff and Paul N. Weinberg. SQL: The Complete
Reference. McGraw-Hill Osborne Media, 2nd edition, 2002. 433
￼￼ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 434 — #460 i
￼￼￼[15] [16] [17] [18] [19] [20] [21] [22]
[23]
[24] [25]
[26] [27]
[28] [29]
Gabor Grothendieck and Thomas Petzoldt. R help desk: Date and time classes in R. R News, 4(1):29–32, 2004.
Jeffrey A. Hoffer, Mary Prescott, and Fred McFadden. Modern Database Management. Prentice Hall, 7th edition, 2004.
Andrew Hunt and David Thomas. The Pragmatic Programmer: From Journeyman to Master. Addison-Wesley, 1999.
IBM. developerWorks home page, 2008. http://www.ibm.com/developerworks/.
David A. James. RSQLite: SQLite interface for R, 2008. R package version 0.6-3.
David A. James and Saikat DebRoy. RMySQL: R interface to the MySQL database, 2006. R package version 0.5-11.
Michael Lapsley and B. D. Ripley. RODBC: ODBC Database Access, 2008. R package version 1.2-3.
Friedrich Leisch. Sweave: Dynamic generation of statistical reports using literate data analysis. In Wolfgang Ha ̈rdle and Bernd Ro ̈nz, editors, Compstat 2002 — Proceedings in Computational Statistics, pages 575–580. Physica Verlag, Heidelberg, 2002.
H ̊akon Wium Lie and Bert Bos. Cascading Style Sheets, Level 1. World Wide Web Consortium (W3C), 1996. http://www.w3.org/TR/CSS1/.
Steve McConnell. Code Complete: A Practical Handbook of Software Construction. Microsoft Press, 2nd edition, 2004.
Paul Murrell. hexView: Viewing Binary Files, 2008. R package version 0.4.
Gregoire Pau. hwriter: HTML Writer, 2008. R package version 0.92. Roger D. Peng. Interacting with data using the filehash package. R
News, 6(4):19–24, 2006.
David Pierce. ncdf: Interface to Unidata netCDF data files, 2008. R
package version 1.6.
R Development Core Team. R: A Language and Environment for Statistical Computing. R Foundation for Statistical Computing, Vienna, Austria, 2008.
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 435 — #461 i
￼￼￼[30] [31] [32] [33] [34] [35] [36] [37] [38]
[39] [40] [41]
[42]
[43]
[44]
[45]
[46] [47]
Bibliography 435 R Foundation for Statistical Computing. Comprehensive R Archive
Network, 2008. http://cran.r-project.org/.
R Foundation for Statistical Computing. R Project for Statistical
Computing home page, 2008. http://www.r-project.org/. R Special Interest Group on Databases (R-SIG-DB). DBI: R
Database Interface, 2008. R package version 0.2-3. Dave Raggett. Getting started with HTML.
http://www.w3.org/MarkUp/Guide/, 2005. Dave Raggett. Adding a touch of style.
http://www.w3.org/MarkUp/Guide/Style.html, 2008. Dave Raggett. HTML Tidy home page.
http://www.w3.org/People/Raggett/tidy/, 2008.
Dave Raggett, Jenny Lam, Ian F. Alexander, and Michael Kmiec.
Raggett on HTML 4. Addison-Wesley, 2nd edition, 1997. Roman Czyborra. The ISO 8859 Alphabet Soup, 1998.
http://aspell.net/charsets/iso8859.html. Dave Shea. Zen Garden home page.
http://www.csszengarden.com/, 2008.
Phil Spector. Data Manipulation with R. Springer, 2008. SQLite home page. http://www.sqlite.org/, 2008.
Statistical Data and Metadata Exchange Initiative. SDMX User Guide, 2007. http://sdmx.org/wp-content/uploads/2008/02/ sdmx-userguide-version2007-1-4.doc.
Tony Stubblebine. Regular Expression Pocket Reference. O’Reilly Media, Inc., 2nd edition, 2007.
Hans-Peter Suter. xlsReadWrite: Natively read and write Excel files, 2008. R package version 1.3.2.
Duncan Temple Lang. XML: Tools for parsing and generating XML within R and S-Plus, 2008. R package version 1.95-3.
U.S. Census Bureau. World POPClock Projection, 2008. http://www.census.gov/ipc/www/popclockworld.html.
Daniel Veillard. libxml home page. http://xmlsoft.org/, 2008. W3Schools. CSS tutorial. http://www.w3schools.com/css/, 2008.
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 436 — #462 i
￼￼￼[48] [49]
[50] [51]
[52] [53] [54] [55] [56] [57] [58]
[59] [60] [61]
W3Schools. DTD tutorial. http://www.w3schools.com/dtd/, 2008. W3Schools. HTML tutorial. http://www.w3schools.com/html/,
2008.
W3Schools. XML tutorial. http://www.w3schools.com/xml/, 2008.
W3Schools. XPath tutorial. http://www.w3schools.com/Xpath/, 2008.
Gregory R. Warnes. gdata: Various R programming tools for data manipulation, 2005. R package version 2.1.2.
Web Design Group. Cascading Style Sheets, 2008. http://htmlhelp.com/reference/css/.
Web Design Group. HTML 4 Reference, 2008. http://htmlhelp.com/reference/html40/.
Hadley Wickham. reshape: Flexibly reshape data, 2007. R package version 0.8.0.
Wikipedia. Pole of inaccessibility, 2008. [Online; accessed 22-September-2008].
World Wide Web Consortium (W3C). HTML 4.01 Specification, 1999. http://www.w3.org/TR/html401/.
World Wide Web Consortium (W3C). Extensible Markup Language (XML) 1.0, 4th edition, 2006. http://www.w3.org/TR/2006/REC-xml-20060816/.
World Wide Web Consortium (W3C). CSS Validation Service home page. http://jigsaw.w3.org/css-validator/, 2008.
World Wide Web Consortium (W3C). Markup validation service home page. http://validator.w3.org/, 2008.
Achim Zeileis and Gabor Grothendieck. zoo: S3 infrastructure for regular and irregular time series. Journal of Statistical Software, 14(6):1–27, 2005.
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 437 — #463 i
￼￼Index
! (exclamation) in R, 240, 394
!= (not equal)
in R, 240, 394
in SQL, 201 <> (not equal)
in SQL, 201 " (double-quote)
in R, 238, 258, 393 in CSV, 75
in HTML, 14
in XML, 101, 150
' (single-quote)
in R, 238, 393
in SQL, 201 ( (parenthesis)
in R, 239, 241, 383, 386
in DTD, 112, 152
in regular expressions, 366,
424
in SQL, 180, 183, 201, 203
* (asterisk)
in R, 239, 394
in R formulas, 284
in DTD, 112, 152
in regular expressions, 366,
423
in SQL, 176, 198
+ (plus)
in DTD, 152
in regular expressions, 423 . (full stop)
in regular expressions, 420 / (forwardslash)
in R, 239, 394 : (colon)
in R, 255, 399
in CSS, 37 ; (semi-colon)
in CSS, 37 < (less than)
in R, 240, 394
in SQL, 201 < (angle bracket)
in HTML, 16, 43
in XML, 103, 151
<- (assignment), 244, 395 <= (less than or equal)
in R, 240, 394
in SQL, 201 = (equals)
in SQL, 201 == (equals)
in R, 240, 394 > (greater than)
in R, 240, 394
in SQL, 201
>= (greater than or equal)
in R, 240, 394
in SQL, 201 ? (question mark)
in R, 416
in DTD, 152
in regular expressions, 423
[ (square bracket) in R, 264, 402
in regular expressions, 365, 420
in XPath, 194
[[ (double square bracket)
in R, 269, 403 # (hash)
in R, 247 $ (dollar)
in regular expressions, 422 & (ampersand)
in R, 240, 394
in HTML, 16, 43
437
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 438 — #464 i
￼￼￼in XML, 103, 151 { (bracket)
in R, 383, 386
in CSS, 37, 51 ~ (tilde)
in R, 284 \ (backslash)
in R, 362, 425 ^ (hat)
in R, 239, 394
in regular expressions, 366,
421
| (vertical bar)
in R, 240, 394
in DTD, 153, 154
in regular expressions, 361,
422
in XPath, 194
<a>, 18, 45
abbreviate(), 413 addmargins(), 407 aggregate(), 323–327, 329, 332,
340, 348, 350, 408 aggregating, 322–327
agrep(), 412
algorithm, 379
all(), 400
all.equal(), 262, 400 ampersand, see &
anchor, see <a>, see regular
expression and (logic), see &
any(), 400
aperm(), 410
append(), 399
apply(), 329–333, 387, 408 argument, see function arithmetic
in R, 239, 394 in SQL, 169 with dates, 283
array, see data structure array(), 261
as.character(), 246, 274–276, 374, 401
as.Date(), 283, 294, 295, 300, 401
as.integer(), 401 as.logical(), 401 as.numeric(), 274–276, 368, 401 ASCII, see encoding
assignment, 243, 395, see <- asterisk, see *
atomic columns, 128, 135 att.get.ncdf(), 300 <!ATTLIST>, 112, 153 attr(), 279, 401
attribute
in R, 277, 401
in database design, 123 in DTD, 110, 111, 153
CDATA, 113, 153 ID, 113, 144, 153 IDREF, 144, 153
in HTML, 14, 18, 41, 49 in netCDF, 299
in XML, 101, 150
design, 104, 105, 108 in XPath, 193, 306
attribute declaration, see <!ATTLIST>
attributes(), 279, 401
background-color:, 55 backreference, 367, 424 backslash, see \
base package, 416 basename(), 403 binary, 83
binary format, see file format binning, 317–318
Bioconductor project, 389
bit (computer memory), 69 block-level (HTML), see element <body>, 17, 44
BOM (byte order mark), 78 border-color:, 55
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 439 — #465 i
￼￼￼border-style:, 55 border-width:, 55 <br>, 47
bracket, see {
bug (computer code), 32 by(), 326, 327, 332 byte, 70
c(), 252–254, 259, 265, 334, 398 C (programming language), 390 call, see function
camelCase, 248 capture.output(), 406 cardinality, see relationship caret, see ^
Cascading Style Sheets, see CSS case study
Commonwealth swimming, 173, 184
Counting candy, 252 NCEA, 327
New Zealand schools, 312 Over the limit, 95
Point Nemo, 1
data display, 372 importing into R, 292 netCDF, 85
plain text format, 71 web page, 9
XML, 110
XPath, 192 Rusty wheat, 362 The Data Expo, 79
database, 158 database design, 133 database joins, 178 database queries, 164 programming, 380 self join, 188
SQL and R, 309 XML design, 143
The longest placename, 354 The Population Clock, 215 Utilities, 345
Index 439
YBC 7289, 62
casefolding, see tolower() and
toupper() cast(), 342–344, 411
cat(), 373, 375, 376, 414 categorical variable, 251, 320 cbind(), 334, 351, 409 <![CDATA[, 103, 151 ceiling(), 401
Central Processing Unit, see CPU
character set, see regular expression
character value, 237, 250, 354, 396
coercing to, 374–376 character vector, 250 class
of data structure, 280, 402 of element, 49
selector (CSS), 53
class(), 280, 281, 402 clear:, 57
close(), 406
coercion, see type coercion collation, see SELECT colnames(), 260, 280, 402 colon, see :
color:, 55
column alias, see SELECT Comma-Separated Value, see
CSV command line
in R, 230–234
in SQLite, 190–191 comment (computer code), 26
in R, 247
in HTML, 26, 42 in XML, 151
Commonwealth swimming, see case study
component (of list), see data structure
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 440 — #466 i
￼￼￼composite primary key, see primary key
Comprehensive R Archive Network, see CRAN
computer hardware, see hardware
computer memory, see memory concatenate, see c() and
paste()
condition
in R, 240, 394–396
in SQL, 164, 200, 201 in XPath, 194
content (HTML), see element control flow, 382–384, 395–396 Counting candy, see case study CPU, 212
CRAN, 230, 417 CREATE TABLE, 204
CONSTRAINT clause, 204 cross join, see join
CSS, 51–59
CSV, see file format cumprod(), 400
cumsum(), 400 cut(), 317, 348, 407
Data Control Language, see SQL Data Definition Language, see
SQL
Data Documentation Initiative,
see DDI
data export, see file, writing
data frame, see data structure data import, see file, reading data integrity, 116, 126, 138, 141,
257
Data Manipulation Language,
see SQL
data model, 73, 119, 141
data query, see SQL and XPath data structure, 250–261,
272–287, 396 array, 251, 260–261
data frame, 251, 257–258 factor, 251, 256–257
levels, 257
list, 251, 258–260
component, 251, 260 matrix, 251, 260–261 vector, 250, 254–256
element, 250 data type
in R, 250, 396
in a database, 120
in memory, 70, 83, 90 in SQL, 204
data.frame(), 257, 275 database, 118–145
and R, 307–310 design, 122–133 join, see join query, see SQL software, 145
Database Management System, see DBMS
database query, see SQL date value, 90–91, 283–284
coercing to, see as.Date()
ISO 8601, 91
date-time value, 91 dbConnect(), 308, 309 dbDisconnect(), 309 dbDriver(), 308, 309 dbGetQuery(), 309
DBI package, 308
DBMS, 118
DDI, 114
debug(), 389, 414
debugging, 32–33, 388–389, 414 DELETE, 207
delimited format, see file format delimiter, 68
denormalization, 133
diff(), 400
dim(), 285, 328, 402 dimnames(), 259, 260, 402
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 441 — #467 i
￼￼dir.create(), 404 dirname(), 403 display:, 56 <div>, 49 <!DOCTYPE>
in HTML, 15, 42
in XML, 113, 154 document, see file
Document Type Declaration, see <!DOCTYPE>
Document Type Definition, see DTD
documentation, 26, 30, 247 dollar sign, see $
Don’t Repeat Yourself, see DRY
principle DROP TABLE, 207
DRY principle, 33–34, 37, 39, 73, 113, 133, 388
DTD, 109–114, 151–155 dump(), 406
duplicative columns, 128, 135
<!ELEMENT>, 111, 152 element
content, 11, 41 empty
in DTD, 111, 152 in HTML, 13, 41 in XML, 102, 150
in DTD, 110, 111, 152 in HTML, 11–14, 17, 41,
44–49 block-level, 43 inline, 43
in XML, 101, 149 design, 104, 105, 108
in XPath, 192
element (of vector), see data
structure element declaration, see
<!ELEMENT>
empty element, see element encoding, 77–79, 149
ASCII, 77 Latin1, 78 Latin2, 78 multi-byte, 78 UNICODE, 78 UTF-16, 78 UTF-8, 78
end tag, see tag entity
ii ii
in database design, 123 in HTML, 43
in XML, 151
equal sign, see = and == equality
in R, see ==
in SQL, see =
error message, 28–30
escape sequence, 15–16, see \
in CSV, 75
in HTML, 43
in regular expressions, 424 in XML, 103, 151
example(), 416
Excel, 94, see file format
and R, 302, 309 expression (R), 237, 393 eXtensible Markup Language,
see XML
factor, see data structure factor(), 257
FALSE, 240, 246, 256, 393, 396 ff package, 390
file, 70
header, 67, 86
path, 290 reading, 289–307 writing, 289, 297
file(), 406 file format, 70
binary, 82–92 CSV, 75–76 delimited, 68 Excel, 93
Index 441
￼￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 442 — #468 i
￼￼￼fixed-width, 69 netCDF, 86–88 PDF, 89–90
plain text, 67–82 self-describing, 114 spreadsheet, 93–98
file.choose(), 290, 403 file.copy(), 404 file.exists(), 404 file.path(), 290, 403 file.remove(), 404 file.rename(), 404 filehash package, 390 Firefox, 31
first normal form, see normal form
fixed-width format, see file format
float:, 56
floor(), 401
font-family:, 54 font-size:, 54
font-style:, 35, 54 font-weight:, 54
for loop, 383, 395
foreign package, 298, 405, 416 foreign key, 120
in relationships, 123
notation, 121
format, see file format format(), 374, 413, 414 formula (R), 284–285, 322, 344 forwardslash, see /
free(), 307
ftable(), 408
full join, see join
full stop, see .
function (R)
argument, 241–242, 394–395 default value, 242
call, 240–242, 394–395 generic, 286–287, 373 writing, 384–387
gdata package, 304
generic function, see function get.var.ncdf(), 299 getNodeSet(), 306
getwd(), 403
glob2rx(), 403
greater than sign, see > and >= gregexpr(), 356–358, 412 grep(), 357, 365, 369, 412 gsub(), 355, 367, 412
<h3>, 17, 45
hardware, 210–214
hash sign, see #
<head>, 44
head(), 286, 402
header, see file
height:, 55
help(), 414
help page, see help() help.search(), 417 hexadecimal, 71
hierarchical (structure), 73, 106,
142, 260 <hr>, 18, 47
HTML, 41–49
and R, 376–379
and CSS, 57–58 <html>, 44
HTML Tidy, 27–28
hwrite(), 378
hwriter package, 378 hyperlink, 9, 18, 45 HyperText Markup Language,
see HTML
identical(), 400
if expression, 396
ifelse(), 314, 407
<img>, 18, 45
indenting, 22–24, 102, 169, 247
automatic, 20 index, see subsetting inequality, see != and <>
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 443 — #469 i
￼￼￼Inf, 246, 393
infinity, see Inf
inline (HTML), see element inner join, see join
input, 213
INSERT, 205 install.packages(), 417 installing, see package integer value, 396
coercing to, 401 is.infinite(), 400 is.na(), 271, 400 is.nan(), 400 is.null(), 400
ISO 8601, see date value
Java, 390
join (database), 173–189
cross join, 176–177, 199 full outer join, 188
in R, 337, 409
inner join, 178–181, 200 left outer join, 186 outer join, 184–188, 200 right outer join, 188 self join, 188–189, 200
keyboard, 213 keyword, 9
highlighting, 20
in R, 246–247, 383, 386 in DTD, 111
in SQL, 164, 198
lapply(), 331–333, 340, 387, 409 Latin1, see encoding
Latin2, see encoding
left join, see join
length(), 285, 358, 402 less than sign, see < and <= levels(), 280
levels (of factor), see data
structure
Index 443
library(), 416
libxml, 103
line ending, 76–77
line numbering, 20
<link>, 44
font-style:<link>, 37
list, see <ol>, see <ul>, see data
structure list(), 259, 260
list.files(), 403
literal, see escape sequence, see
regular expression load(), 406
loading, see package logical value, 240, 256, 396 logical vector, 256
long format, 340
loop (R), 382–384, 395–396 ls(), 398
mapply(), 409
margin:, 56 margin.table(), 407 markup (XML), 101, 104 mass storage (computer
hardware), 213 match(), 400
matrix, see data structure matrix(), 260
max(), 322, 324, 399
mean(), 322, 324, 330, 333, 381,
386, 399
melt(), 342, 343, 410, 411
memory, see assignment persistent, 213
representing numbers, 83 representing text, 72 temporary, 212
merge(), 336, 337, 409 merging, 334–337 metacharacter, see regular
expression metadata, 4, 65
and XML design, 109
<li>, 47
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 444 — #470 i
￼￼￼in a file, 67, 293
in a spreadsheet, 95
in data structures, 277 in netCDF, 299 storing, 92
Microsoft Excel, see Excel min(), 322, 324, 399
Minitab, 298
missing value, see NA
modifier, see regular expression months(), 350, 401
multi-level, see hierarchical
NA, 246, 393
na.omit(), 403
name, see symbol
names(), 279, 402
NaN, 246, 393
ncdf package, 298, 300, 405 NCEA, see case study nchar(), 355, 412
ncol(), 402
netCDF, see file format network (computer hardware),
214
New Zealand schools, see case
study normal form, 127
first, 128–130 second, 130–132 third, 132–133
normalization, 127–133 not (logic), see !
Not a Number, see NaN nrow(), 402
NULL, 246, 393
numeric value, 237, 250, 396
coercing to text, 374 numeric vector, 250
numerical precision, see precision
object.size(), 397 ODBC, 304, 309 odbcClose(), 309
odbcConnect(), 309
ODF, 93
Office Open XML, see OOXML <ol>, 47
OOXML, 93
Open DataBase Connectivity, see
ODBC open source, xxii
open standard, xxii, 85, 93, 163 OpenDocument Format, see
ODF operators (R)
arithmetic, 239, 394
logical, 240, 394 option (R), 262, 398 options(), 262, 398 or (logic), see | order(), 318, 319, 407 ordering, see sorting outer join, see join output, 213
in R, 371–379
Over the limit, see case study
<p>, 18, 45
package (R), 236, 416–417
installing, 236, 417
loading, 236, 416 padding:, 56
paragraph, see <p> parenthesis, see ( matching, 20
paste(), 286, 360, 374, 413 path, see file
pattern, see regular expression PCRE, 361
PDF, see file format Perl, 390 Perl-Compatible Regular
Expressions, see PCRE plain text format, see file format
plus sign, see +
pmatch(), 400
Point Nemo, see case study
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 445 — #471 i
￼￼￼Portable Document Format, see PDF
Portable Operating System Interface, see POSIX
POSIX, 361, 421 <pre>, 18, 48 precision, 84, 261 predicate, 194 primary key, 120
composite, 120
in first normal form, 128
in relationships, 123
in second normal form, 130 in third normal form, 132 notation, 121
surrogate, 137
print(), 372, 373, 375, 413, 414 programming, 379–389 programming language, 209–214 prompt
in R, 230
in SQLite, 160 prop.table(), 407
property (CSS), 35, 51, 54–57 proprietary, xxii, 85, 93 Python, 390
q(), 234, 398 quarters(), 401 question mark, see ? quote mark, see ’ and "
R (language), 393–414
R (software), 230–236
RAM, 212
random access, 89
Random Access Memory, see
RAM range(), 326, 332, 399
rapply(), 409 rbind(), 334, 409 RDBMS, 118 read.csv(), 291, 404 read.delim(), 405
Index 445
read.fwf(), 291, 295, 363, 381, 386, 404
read.spss(), 416 read.table(), 291–293, 296,
304, 327, 346, 363, 404,
405 read.xls(), 301, 304
readLines(), 291, 296, 304, 363, 404
real number, see numeric value recast(), 412
recycling rule, 256, 273 regexpr(), 357, 369, 412 regular expression, 419–425
alternation, 422
anchor, 421–422
character set, 365, 420–421 grouping, 424
literal, 361, 367, 419, 421 metacharacter, 361,
365–368, 420–425 modifier, 423
relational database, see database relationship
and normalization, 133 cardinality, 123
in database design, 123–126 in XML design, 143
Relax NG, 114
rep(), 254, 255, 399
repeat, see rep()
reserved word, see keyword reshape package, 342, 343, 410 reshaping, 340–345
rev(), 399
right join, see join
rm(), 398
RMySQL package, 308 RODBC package, 308, 309 root element (XML), 102, 150
in DTD, 154
in XPath, 193 round(), 401
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 446 — #472 i
￼￼￼rounding, see integer value rownames(), 260, 280, 402 RSiteSearch(), 417 RSQLite package, 308, 309 rule (CSS), 35, 51
Rusty wheat, see case study
sapply(), 331, 333, 384, 387, 409 SAS, 298
save(), 406
scan(), 354, 405
schema
in database notation, 121 in DTD, 110, 151
in SQL, 204
screen (computer hardware), 213 SDMX, 114
search(), 416 search-and-replace, 355 searching (text), 356, 365
second normal form, see normal form
SELECT, 163–189, 197–203 all columns, 175
collation, 171
column alias, 169
column function, 169 FROM clause, 164, 199–200 GROUP BY clause, 171,
202–203
ORDER BY clause, 168, 202 SELECT clause, 164, 198–199 table alias, 179
WHERE clause, 165, 200–202
selector (CSS), 35, 51–54
self join, see join self-describing, see file format semantics, 16
semi-colon, see ; separator, see delimiter seq(), 255, 398 seq_along(), 398 seq_len(), 398 sequence, see seq()
sequential access, 89 setwd(), 290, 403 signif(), 351, 401 sink(), 406 sort(), 318, 407 sorting, 318–320
in SQL, 165
source(), 233, 406
<span>, 49
split(), 338, 340, 410 splitting, 338–340 spreadsheet, see file format sprintf(), 374, 375, 413, 414 SPSS, 298
SQL, 197–207
and R, 307–310 DCL, 163 DDL, 163 DML, 163
SQLite, 189–191 and R, 308
sqlQuery(), 309
square bracket, see [ and [[ stack(), 410
standard, see open standard start tag, see tag
Stata, 298
Statistical Data and Metadata
eXchange, see SDMX storage format, see file format
str(), 285, 339, 402
stratified, see hierarchical strftime(), 401
string, see character value strsplit(), 357, 358, 413 strtim(), 413
Structured Query Language, see
SQL strwrap(), 414
<style>, 35, 44, 57 stylesheet, see CSS sub(), 412
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 447 — #473 i
￼￼￼subpattern (regular expressions), 366, 424
and backreferences, 424 and modifiers, 423
as alternative, 422
subquery, 183–184, 203 subset(), 268, 403 subsetting, 263–272
and assignment, 270
factors, 271 substr(), 412
substring(), 367–369, 413 sum(), 322, 324, 399 summary(), 285, 287, 402 surrogate key, see primary key Sweave package, 378 sweep(), 349, 408
switch(), 407 symbol (R), 243–247
predefined, 246 syntax, 11
highlighting, 20 Sys.Date(), 283, 401 Sys.sleep(), 414, 416 Systat, 298
t(), 410
<table>, 46
table(), 320–322, 350, 359, 407,
408
table alias, see SELECT
table of counts, 320–322 tag
in HTML, 9, 13, 41 attributes, 14, 41 nesting, 14
in XML, 101, 149 attributes, 150 case-sensitivity, 101 empty elements, 102, 150
tail(), 286, 402 tapply(), 408
<td>, 46
text, see character value
Index 447
text editor, 19–20 text-align:, 55
The Data Expo, see case study The longest placename, see case
study
The Population Clock, see case
study
third normal form, see normal
form <title>, 44
tolerance, see precision tolower(), 359, 412 toupper(), 412
<tr>, 46
transform(), 315, 406 transformation, 314–318 transpose, see t()
TRUE, 240, 246, 256, 393, 396 type, see data type
type coercion, 224, 274–276, 401 to character, see character
value
to date, see date value
<ul>, 47
UNICODE, see encoding Uniform Resource Locator, see
URL unique(), 399
unlist(), 306, 399 unsplit(), 410 UPDATE, 207
URL, 44, 45
and R, 404 UTF-16, see encoding UTF-8, see encoding Utilities, see case study
valid (XML), 113, 151 vector, see data structure vignette(), 417
W3C, 27 CSS, 51
ii ii
￼￼￼￼
￼￼i
ii
“itdt” — 2013/3/26 — 15:24 — page 448 — #474 i
￼￼￼validation, 51 HTML, 41
validation, 27 XML, 149
validation, 103 web browser, 31
weekdays(), 401 well-formed (XML), 113, 151 which.max(), 399 which.min(), 399
while loop, 395–396 whitespace, 24
delimiter, 68, 291 in R, 247
in HTML, 18
in XML, 151
whitespace:, 56
wide format, 340
width:, 55
word (computer memory), 70 word processor, 19
working directory (R), 289–290, 403
workspace (R), 234–236
World Wide Web Consortium,
see W3C write.csv(), 297, 405
write.table(), 405 writeLines(), 241, 242, 376, 405
xlsReadWrite package, 301 XML, 149–151
and R, 304–307 and DTD, 154 literal, 151
XML package, 236, 304–306, 311, 405
XML Schema, 114 xmllint, 104 xmlParse(), 306 xmlTreeParse(), 305 XPath, 191–194
and R, 305–307 XQuery, 191
xtable package, 378
xtabs(), 280, 284, 285, 322, 407
Yahoo! User Interface Library, see YUI
YBC 7289, see case study YUI, 59
zoo package, 389
ii ii
￼￼￼￼